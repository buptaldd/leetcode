/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode head = new ListNode() ;
        ListNode tail = head ;
        int carry = 0 ;
        while (l1!= null || l2!= null ){
            int n1 , n2 ;
            if (l1==null) n1 = 0 ; 
            else n1 = l1.val ;
            if (l2==null) n2 = 0 ;
            else n2 = l2.val ;
            tail.val = (n1 + n2 + carry)%10 ;
            carry = (n1 + n2 + carry)/10 ;
            if (l1!=null) l1 = l1.next ;
            if (l2!=null) l2 = l2.next ;
            if(l1!= null || l2!= null || carry != 0 ){
                tail.next = new ListNode() ;
                tail = tail.next ;
            }
            if(l1 == null && l2 == null && carry != 0 ){
                tail.val=1 ;
            }
        }
        return head ;
    }
}
